// Copyright (c) 2025 Ziga Miklosic
// All Rights Reserved
// This software is under MIT licence (https://opensource.org/licenses/MIT)
////////////////////////////////////////////////////////////////////////////////
/**
*@file      fsm_cfg.h
* @brief    Finite State Machine (FSM) Configurations
*@author    Ziga Miklosic
*@email     ziga.miklosic@gmail.com
*@date      24.04.2025
*@version   V2.1.0
*/
////////////////////////////////////////////////////////////////////////////////
/**
*@addtogroup FSM_CFG
* @{ <!-- BEGIN GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////

#ifndef _FSM_CFG_H_
#define _FSM_CFG_H_

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <stdint.h>

// USER INCLUDE BEGIN...

// HAL
#include "stm32l4xx_hal.h"

// Global project settings
#include "config/proj_cfg.h"

// Debug communication port
#include "middleware/cli/cli/src/cli.h"

// USER INCLUDE END...

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

// USER CODE BEGIN...

/**
 *  Maximum number of all FSM states
 */
#define FSM_CFG_STATE_MAX               ( 8 )

/**
 *  Get system timetick in 32-bit unsigned integer form
 *
 *  Unit: ms
 */
#define FSM_GET_SYSTICK()               ( sys_systick_get_ms())

/**
 *    Enable/Disable debug mode
 */
#define FSM_CFG_DEBUG_EN                ( 1 )

/**
 *    Enable/Disable assertions
 */
#define FSM_CFG_ASSERT_EN               ( 1 )

// USER CODE END...

#ifndef DEBUG
   #undef FSM_CFG_DEBUG_EN
   #define FSM_CFG_DEBUG_EN             ( 0 )
#endif

#ifndef DEBUG
   #undef FSM_CFG_ASSERT_EN
   #define FSM_CFG_ASSERT_EN            ( 0 )
#endif

/**
 *    Debug communication port macros
 */
#if ( 1 == FSM_CFG_DEBUG_EN )
    // USER CODE BEGIN...
   #define FSM_DBG_PRINT( ... )         ( cli_printf((char*) __VA_ARGS__ ))
    // USER CODE END...
#else
   #define FSM_DBG_PRINT( ... )         { ; }

#endif

/**
 *     Assertion macros
 */
#if ( 1 == FSM_CFG_ASSERT_EN )
    // USER CODE BEGIN...
   #define FSM_ASSERT(x)                PROJ_CFG_ASSERT(x)
    // USER CODE END...
#else
   #define FSM_ASSERT(x)                { ; }
#endif

#endif // _FSM_CFG_H_
